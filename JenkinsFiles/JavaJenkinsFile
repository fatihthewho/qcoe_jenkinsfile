try {
    def status = 'pass'
    node
            {
                stage('Setup') {
                    cleanWs()
                    echo "Setup Stage"
                }
                node("selenium") {
                    stage('Checkout Repo') {
                        echo "===accessing Project repo  ==============="
                        checkoutRepo(params.repo_url, params.branch)
                    }
                    stage('Build') {
                        bat 'mvn clean compile'
                    }
                    stage('Test') {
                        try {
                            executeMavenTests(params.no_of_parallel_threads, params.use_selenium_grid, params.browser, params.environment, params.no_of_retries, params.test_suite_file)
                        }
                        catch (Exception e) {
                            status = "fail"
                        }
                    }
                    stage("Artifacts") {
                        echo "=======Artifacts stage ===="
                        archiveJavaArtifacts()

                    }
                    stage('XRay') {
                        echo "=======XRay Stage ===="
                    }
                }
                stage('Email') {

                    echo "=======EMail Stage ===="
                    if (status != "pass") {
                        currentBuild.result = 'FAILURE'
                    }
                }


            }


} catch (Exception ex) {
    println(ex)
    currentBuild.result = 'FAILURE'
} finally {

    echo "===Done  ==============="
}

def checkoutRepo(url, branch) {
    echo "checking out ${url} ${branch} "
    checkout([$class                           : 'GitSCM',
              branches                         : [[name: "*/${branch}"]],
              doGenerateSubmoduleConfigurations: false,
              extensions                       : [[$class: 'CleanCheckout']],
              submoduleCfg                     : [],
              userRemoteConfigs                : [[credentialsId: 'bitbucket-svc1', url: "${url}"]]
    ])

}

