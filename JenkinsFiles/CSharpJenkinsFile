def status = true

try {
    node
            {
                stage('Master Setup') {
                    cleanWs()
                    def temp = getCurrentDirectory()
					jutils = load "${temp}/src/helpers.groovy"
                    CURRENT_DIR_PATH = temp
				}
                node("selenium") {
                    stage('Checkout') {
                        echo "===checking out project repo  ==============="
                        jutils.checkoutRepo(params.repo_url, params.branch)
                    }
                    stage('Build') {
                        bat 'dotnet build'
                    }
                    try {
                        stage('Test') {

                            jutils.executeNUnitTests(params.no_of_parallel_threads, params.use_selenium_grid, params.browser, params.environment, params.test_selection_criteria)
                            EMAIL_INFO = jutils.getFileContent("${env.WORKSPACE}/JenkinsInfo.txt")
                        }
                    }
                    catch (Exception e) {
                        println(e)
                        status = false
                    }
                    stage("Artifacts") {

                        echo "=======Artifacts stage ===="
                        jutils.archiveCSharpArtifacts()

					}
                    stage('XRay') {
                        echo "=======XRay Stage ===="

                        jutils.updateXRayWithNUnit(params.test_plan_key)


                    }
                }
                stage('Email') {
                    echo "=======EMail Stage ===="
                    jutils.sendEmail(params.email_recipients)
                }
            }


} catch (Exception ex) {
    println(ex)
    status = false
} finally {
    if (!status) {
        currentBuild.result = 'FAILURE'
    }
    echo "===Done==============="
}

def getCurrentDirectory() {
    def temp = "${env.WORKSPACE}@script"
    def std = powershell returnStdout: true, script: """(Get-ChildItem -Path $temp -Recurse -Filter "*tmp").FullName"""
    temp = std.trim().replace("\n", "")
    echo "modified:${temp}"
    return temp.replace('@tmp', '')
}
